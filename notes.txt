runbackend
-----------
uvicorn main:app --host localhost --reload --log-level debug

E:/Python/test-web-app/backend


Installreq
-----------
pip install -r requirements.txt

E:/Python/test-web-app/backend


killprocess5173
---------------
Get-Process -Id (Get-NetTCPConnection -LocalPort 5173).OwningProcess | Stop-Process -Force

E:/Python/test-web-app


runfrontend
-------------
npm run dev

E:/Python/test-web-app/frontend



------------------------------------------------------------------------------------------------------------------------

{
  "project_name": "Another Project",
  "wo_number": "WO-100",
  "wo_date": "2025-03-12",
  "bmcd_number": "AC301",
  "total_labor_amount": 2000.00,
  "total_expenses_amount": 250.00,
  "total_travel_amount": 200.00,
  "total_tier_fee": 100.00,
  "total_budget_amount": 1500.00,
  "subtasks": [
    {
        "subtask_name": "Physical",
	    "activity_id": 1526,
	    "alias": PHY,
        "labor_amount": 500.00,
	    "labor_line": 1,
        "expenses_amount": 200.00,
	    "expenses_line": 3,
        "travel_amount": 100.00,
	    "travel_line": 2,
        "tier_fee": 25.00,
	    "tier_line": 4,
        "budget_amount": 825.00
      },
      {
        "subtask_name": "P&C",
        "activity_id": 1528,
	    "alias": PC,
        "labor_amount": 650.00,
	    "labor_line": 5,
        "expenses_amount": 570.00,
	    "expenses_line": 6,
        "travel_amount": 670.00,
	    "travel_line": 4,
        "tier_fee": 250.00,
	    "tier_line": 5,
        "budget_amount": 8250.00

      },
      {
        "subtask_name": "Telecom",
        "activity_id": 1529,
	    "alias": TEL,
        "labor_amount": 6550.00,
	    "labor_line": 2,
        "expenses_amount": 1570.00,
	    "expenses_line": 1,
        "travel_amount": 6750.00,
	    "travel_line": 3,
        "tier_fee": 3250.00,
	    "tier_line": 5,
        "budget_amount": 250.00
      },
      {
        "subtask_name": "Transmission",
        "activity_id": 1530,
	    "alias": TRNS,
        "labor_amount": 6550.00,
	    "labor_line": 1,
        "expenses_amount": 7570.00,
	    "expenses_line": 2,
        "travel_amount": 650.00,
	    "travel_line": 4,
        "tier_fee": 8850.00,
	    "tier_line": 3,
        "budget_amount": 1250.00
      }
    ]
}

{
  "wo_date": "2025-03-20",
  "project_name": "Project Beta",
  "wo_number": "WO-654321",
  "bmcd_number": "BMCD-5678",
  "total_labor_amount": 50000.0,
  "total_expenses_amount": 15000.0,
  "total_travel_amount": 8000.0,
  "total_tier_fee": 12000.0,
  "total_budget_amount": 85000.0,
  "subtasks": [
    {
      "subtask_name": "Physical",
      "activity_id": "ACT101",
      "alias": "PHYS",
      "labor_amount": 20000.0,
      "labor_line": 101,
      "expenses_amount": 5000.0,
      "expenses_line": 201,
      "travel_amount": 3000.0,
      "travel_line": 301,
      "tier_fee": 4000.0,
      "tier_line": 401,
      "budget_amount": 32000.0
    },
    {
      "subtask_name": "P&C",
      "activity_id": "ACT102",
      "alias": "PC",
      "labor_amount": 10000.0,
      "labor_line": 102,
      "expenses_amount": 3000.0,
      "expenses_line": 202,
      "travel_amount": 2000.0,
      "travel_line": 302,
      "tier_fee": 2500.0,
      "tier_line": 402,
      "budget_amount": 17500.0
    },
    {
      "subtask_name": "Telecom",
      "activity_id": "ACT103",
      "alias": "TEL",
      "labor_amount": 9000.0,
      "labor_line": 103,
      "expenses_amount": 2000.0,
      "expenses_line": 203,
      "travel_amount": 1500.0,
      "travel_line": 303,
      "tier_fee": 2000.0,
      "tier_line": 403,
      "budget_amount": 14500.0
    },
    {
      "subtask_name": "Scoping",
      "activity_id": "ACT105",
      "alias": "SCOPE",
      "labor_amount": 7000.0,
      "labor_line": 105,
      "expenses_amount": 1000.0,
      "expenses_line": 205,
      "travel_amount": 1000.0,
      "travel_line": 305,
      "tier_fee": 2000.0,
      "tier_line": 405,
      "budget_amount": 11000.0
    }
  ]
}
{
  "wo_date": "2025-03-21",
  "project_name": "Project Gamma",
  "wo_number": "WO-987654",
  "bmcd_number": "BMCD-3456",
  "total_labor_amount": 20000.0,
  "total_expenses_amount": 5000.0,
  "total_travel_amount": 3000.0,
  "total_tier_fee": 4000.0,
  "total_budget_amount": 32000.0,
  "subtasks": [
    {
      "subtask_name": "Physical",
      "activity_id": "ACT101",
      "alias": "PHYS",
      "labor_amount": 20000.0,
      "labor_line": 101,
      "expenses_amount": 5000.0,
      "expenses_line": 201,
      "travel_amount": 3000.0,
      "travel_line": 301,
      "tier_fee": 4000.0,
      "tier_line": 401,
      "budget_amount": 32000.0
    }
  ]
}
{
  "wo_date": "2025-03-23",
  "project_name": "Project Epsilon",
  "wo_number": "WO-445566",
  "bmcd_number": "BMCD-1597",
  "total_labor_amount": 45000.0,
  "total_expenses_amount": 14000.0,
  "total_travel_amount": 7000.0,
  "total_tier_fee": 11000.0,
  "total_budget_amount": 80000.0,
  "subtasks": [
    {
      "subtask_name": "Physical",
      "activity_id": "ACT101",
      "alias": "PHYS",
      "labor_amount": 20000.0,
      "labor_line": 101,
      "expenses_amount": 5000.0,
      "expenses_line": 201,
      "travel_amount": 3000.0,
      "travel_line": 301,
      "tier_fee": 4000.0,
      "tier_line": 401,
      "budget_amount": 32000.0
    },
    {
      "subtask_name": "P&C",
      "activity_id": "ACT102",
      "alias": "PC",
      "labor_amount": 10000.0,
      "labor_line": 102,
      "expenses_amount": 3000.0,
      "expenses_line": 202,
      "travel_amount": 2000.0,
      "travel_line": 302,
      "tier_fee": 2500.0,
      "tier_line": 402,
      "budget_amount": 17500.0
    },
    {
      "subtask_name": "Scoping",
      "activity_id": "ACT105",
      "alias": "SCOPE",
      "labor_amount": 7000.0,
      "labor_line": 105,
      "expenses_amount": 1000.0,
      "expenses_line": 205,
      "travel_amount": 1000.0,
      "travel_line": 305,
      "tier_fee": 2000.0,
      "tier_line": 405,
      "budget_amount": 11000.0
    }
  ]
}

{
  "wo_date": "2025-03-22",
  "project_name": "Project Delta",
  "wo_number": "WO-112233",
  "bmcd_number": "BMCD-7855",
  "total_labor_amount": 7000.0,
  "total_expenses_amount": 1000.0,
  "total_travel_amount": 1000.0,
  "total_tier_fee": 2000.0,
  "total_budget_amount": 11000.0,
  "subtasks": [
    {
      "subtask_name": "Scoping",
      "activity_id": "ACT105",
      "alias": "SCOPE",
      "labor_amount": 7000.0,
      "labor_line": 105,
      "expenses_amount": 1000.0,
      "expenses_line": 205,
      "travel_amount": 1000.0,
      "travel_line": 305,
      "tier_fee": 2000.0,
      "tier_line": 405,
      "budget_amount": 11000.0
    }
  ]
}
------------------------------------------------------------------------------------------------------------------------
write a python code that extracts texts from a pdf using pdf plumber. path of pdf is hardcoded.
The extracted text will be in the following format, which are columns in a database.

word = extracted text
X1 = bottomLeftX coordinate
Y1 = bottomLeftY coordinate
X2 = topRightX coordinate
Y2 = topRightY coordinate
pageNumber = pdf sheet number
pageRotation = pdf sheet orientation (0, 90, 180, 270)
wordRotation = if word is rotated (0, 90, 180, 270)
wordTag = string empty
itemNumber = int empty
colorFlag = int empty

The above information is stores in a SQL database called data.db. create a table called pdf_table.
store the database in the same directory.

pdf_path = r"C:\PYTHONPROJECTS\tva-invoice-streamlit-fastapi\test\15388 BM5-T00357 PO 7676145 2S1MU Goose Pond, AL.pdf"
------------------------------------------------------------------------------------------------------------------------

write a python .py file for the following. database path is hardcoded.
a database file has a table called pdf_table with following columns:
Word,
X1,
Y1,
X2,
Y2,
Page_no,
Page_rot,
Word_rot,
Word_Tag,
Item_no,
Color_flag

those information are extracted from a pdf using pdf plumber.
go row by row in the table.
here are the rules to assign Word_Tag values to some of the corresponding Word.

if the Word = "PO", check if the next Word = "Num:".
if true, set the Word_tag for the word following it as "po_num".

if the Word = "PO", check if the next Word = "Desc:".
if true, then check if the next Word = "Approved". if not, set the Word_tag = "po_desc".
keep doing it until Word = "Approved" is encountered.

if the Word = "Approved", check if the next Word = "Date:".
if true, set the Word_tag for the word following it as "po_appr_date".

if the Word = "Contract", if true, set the Word_tag for the word following it as "contract_num".

if the Word = "Approval", check if the next Word = "Amount:".
if true, set the Word_tag for the word following it as "appr_amount".


line item rules:

step 1:
if the Word = "Line", check if the next Word = "Num:".
if true, set the Word_tag for the word following it as "line_no" and create a variable called item_no = Word.
set the corresponding Item_no column value  = item_no.

step 2:
if the Word = "(M2)" or "(B9)" or "(N1)" or "(T1)", set the Word_tag as "alias" and Item_no = item_no.
set the all Word_tag of the following Words as "cost_type" and Item_no = item_no.  until Word = "Item" is encountered.

step 3:
if the Word = "Line", check if the next Word = "Cost:".
if true, set the Word_tag for the word following it as "line_cost" and Item_no = item_no.

once here, reset item_no and repeat step1-3 for rest of the database table.

------------------------------------------------------------------------------------------------------------------------

if the Word = "PO", if true, set the Word_tag for the word following it as "po_num".

if the Word = "Date:", if true, set the Word_tag for the word following 2 rows after it as "tao_num".

if the Word = "Description:",
if true, set the Word_tag = "tao_desc"
keep doing it until Word = "Project:" is encountered.

if the Word = "Project", check if the next Word = "Number:".
if true, set the Word_tag for the word following it as "proj_num".

if the Word = "Order", check if the next Word = "No:".
if true, set the Word_tag for the word following it as "wo_num".

if the Word = "M2" or "B9" or "N1" or "T1", set the Word_tag as "short_alias" and the following Word_tag = "short_code"

if the Word = "(M2)" or "(B9)" or "(N1)" or "(T1)", set the Word_tag as "alias"
and the Word_tag for the word following it as "alias_total".


if the Word = "Total:", if true, set the Word_tag for the word following it as "total_budget".
------------------------------------------------------------------------------------------------------------------------

if word_tag = "wo_num" and source_table = "tao_table" , then search for the another instance of the corresponding
word values. if found, check if the source_table = "po_table". if true, then update the word_tag = "wo_num"

if word_tag = "tao_num" and source_table = "tao_table" , then search for the another instance of the corresponding
word values. if found, check if the source_table = "po_table". if true, then update the word_tag = "tao_num"

------------------------------------------------------------------------------------------------------------------------


iterate over all the item_no

if item_no = current item_no, and word_tag="line_no" --> assign word value to subtask "line_item"
if item_no = current item_no, and word_tag="alias" --> assign word value to subtask "alias"

        { if word value == "(M2)" --> assign "Physical" to subtask "subtask_name"
        if word value == "(N1)" --> assign "P&C" to subtask "subtask_name"
        if word value == "(B9)" --> assign "Scoping" to subtask "subtask_name"
        if word value == "(T1)" --> assign "Telecom" to subtask "subtask_name"
        }

if item_no = current item_no, and word_tag="cost_type" --> assign word value to subtask "budget_category"
if item_no = current item_no, and word_tag="line_cost" --> assign word value to subtask "category_amount"


grab all the rows with word_tag = "short_alias" and "short_code". Sort by id.

if cleaned_alias matches with any word value of  "short_alias", then
assign word value of the following item with word_tag = "short_code" to the subtask "short_code"


make a group word_tag="cost_type"  and item_no.
make a group word_tag="line_cost"  and item_no.

for cost_type word value "labor"  sum all the  word value of "line_cost" --> assign it to project_data "total_labor_amount"
for cost_type word value "non-travel"  sum all the  word value of "line_cost" --> assign it to project_data"total_expenses_amount"
for cost_type word value "travel"  sum all the  word value of "line_cost" --> assign it to project_data"total_travel_amount"
for cost_type word value "fee"  sum all the  word value of "line_cost" --> assign it to project_data"total_tier_fee"

finally sum all line_cost--> assign it to project_data"total_budget_amount"

------------------------------------------------------------------------------------------------------------------------

open the db session.
go the subtasks table.

extract all the rows with the project_id

invoice_amount = category_amount*invoice_percentage/100

if budget_category is "Fee"

then invoice_amount = category_amount*(invoice_percentage/100)*(tier_fee_percentage/100)

invoice_number = bmcd_number from the projects table "-1"

invoice_creation_date = today's date

-----------------------------------------------------------------------------------------------------------------------
write a python code called invoice_file_generator.py

it will read the data.db sqlalchemy session and creates a new invoice
 by populating data into tva_invoice_template.xlsx

bmcd_number (from projects table)--> cell C3
invoice_number (from invoices table)--> cell C4
contract_number (from projects table)--> cell C5
po_number (from projects table)--> cell C6
tao_number (from projects table)--> cell C7
wo_number (from projects table)--> cell C8
project_name (from projects table)--> cell C9
total_budget_amount (from projects table)--> cell C10


--------------------

if subtask_name = "Scoping" and

budget_category="labor"
    --> cell H15 = line_item (subtasks table)   and  cell K15 = invoice_amount (invoices table)

budget_category="fee"
    --> cell H16 = line_item (subtasks table)   and  cell K16 = invoice_amount (invoices table)

budget_category="non-travel expenses"
    --> cell H17 = line_item (subtasks table)   and  cell K17 = invoice_amount (invoices table)

budget_category="travel expenses"
    --> cell H18 = line_item (subtasks table)   and  cell K18 = invoice_amount (invoices table)


if subtask_name = "Physical" and

budget_category="labor"
    --> cell H22 = line_item (subtasks table)   and  cell K22 = invoice_amount (invoices table)

budget_category="fee"
    --> cell H23 = line_item (subtasks table)   and  cell K23 = invoice_amount (invoices table)

budget_category="non-travel expenses"
    --> cell H24 = line_item (subtasks table)   and  cell K24 = invoice_amount (invoices table)

budget_category="travel expenses"
    --> cell H25 = line_item (subtasks table)   and  cell K25 = invoice_amount (invoices table)



<table class="table-auto text-sm text-left min-w-full">






















